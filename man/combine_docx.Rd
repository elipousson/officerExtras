% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combine_docx.R
\name{combine_docx}
\alias{combine_docx}
\title{Combine multiple rdocx objects or docx files}
\usage{
combine_docx(
  ...,
  docx = NULL,
  .list = list2(...),
  pos = "after",
  sep = NULL,
  call = caller_env()
)
}
\arguments{
\item{...}{Any number of additional rdocx objects or docx file paths.}

\item{docx}{A rdocx object or a file path with a docx file extension.
Defaults to \code{NULL}.}

\item{.list}{Any number of additional rdocx objects or docx file paths passed
as a list. Defaults to \code{\link[=list2]{list2()}}}

\item{pos}{where to add the new element relative to the cursor,
one of "after", "before", "on".}

\item{sep}{Separator to use docx files. A bare function that takes a rdocx
object as the only parameter, such as \link[officer:body_add_break]{officer::body_add_break} or another
object passed to \code{\link[=add_to_body]{add_to_body()}} as the value parameter. Optional. Defaults
to \code{NULL}.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\value{
A rdocx object.
}
\description{
\code{\link[=combine_docx]{combine_docx()}} is a variant of \code{\link[officer:body_add_docx]{officer::body_add_docx()}} that allows any
number of input files and supports rdocx objects as well as Word file paths.
Optionally use a separator between files or objects.

Please note that when you create a new rdocx object with this function (or
\code{\link[officer:body_add_docx]{officer::body_add_docx()}}) the added content will not appear in a summary
data frame created with \code{\link[=officer_summary]{officer_summary()}} and is not accessible to other
functions until the document is \emph{opened and edited} with Microsoft Word. This
is part of how the OOXML \href{https://learn.microsoft.com/en-us/dotnet/api/documentformat.openxml.wordprocessing.altchunk?view=openxml-2.8.1}{AltChunk Class}
works and can't be avoided.
}
\examples{
\dontrun{
if (interactive()) {
  docx_path <- system.file("doc_examples", "example.docx", package = "officer")
  docx <- read_officer(docx_path)

  combine_docx(
    docx,
    docx_path
  )
}
}
}
\seealso{
\code{\link[officer:body_add_docx]{officer::body_add_docx()}}
}
