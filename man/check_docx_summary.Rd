% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cursor_docx.R
\name{check_docx_summary}
\alias{check_docx_summary}
\title{Check a docx summary data.frame}
\usage{
check_docx_summary(
  x,
  n = 1,
  content_type = "text",
  ...,
  arg = caller_arg(x),
  call = parent.frame()
)
}
\arguments{
\item{x}{A data.frame object created with \code{\link[officer:docx_summary]{officer::docx_summary()}}.}

\item{n}{Required number of rows.}

\item{content_type}{Required content_type.}

\item{...}{Additional parameters passed to \code{\link[cli:cli_abort]{cli::cli_abort()}}}

\item{arg}{Argument name to use in error messages. Defaults to
\code{caller_arg(x)}}

\item{call}{The execution environment of a currently running
function, e.g. \code{call = caller_env()}. The corresponding function
call is retrieved and mentioned in error messages as the source
of the error.

You only need to supply \code{call} when throwing a condition from a
helper function which wouldn't be relevant to mention in the
message.

Can also be \code{NULL} or a \link[rlang:topic-defuse]{defused function call} to
respectively not display any call or hard-code a code to display.

For more information about error calls, see \ifelse{html}{\link[rlang:topic-error-call]{Including function calls in error messages}}{\link[rlang:topic-error-call]{Including function calls in error messages}}.}
}
\description{
Check a docx summary data.frame
}
\keyword{internal}
