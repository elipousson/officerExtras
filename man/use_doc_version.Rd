% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_doc_version.R
\name{use_doc_version}
\alias{use_doc_version}
\alias{doc_version}
\title{Update the version of a document and optionally save a new version of the
input document}
\usage{
use_doc_version(
  filename = NULL,
  x = NULL,
  which = NULL,
  save = TRUE,
  sep = ".",
  property = "version",
  prefix = NULL,
  path = NULL,
  ...,
  call = caller_env()
)

doc_version(
  filename = NULL,
  x = NULL,
  sep = ".",
  property = "version",
  allow_new = TRUE,
  .default = c(0, 1, 0),
  call = caller_env()
)
}
\arguments{
\item{filename}{Filename for a Word document or PowerPoint presentation.
Optional if x is supplied, however, it is required to locally save a file
with an updated version name.}

\item{x}{A rdocx or rpptx object. Optional if filename is supplied.}

\item{which}{A string specifying which level to increment, one of: "major",
"minor", "patch", "dev".}

\item{save}{If \code{TRUE} (default) and filename is supplied, write a new file
replacing the existing version number.}

\item{sep}{Character separating version components. Defaults to ".". "-" is
also supported.}

\item{property}{Property name optionally containing a version number.
Defaults to "version".}

\item{prefix}{Property name to use as prefix for new filename, e.g.
"modified" to use modified date/time as the new filename prefix. If prefix
is identical to property and the filename does not already include a
version number, version is added to the filename as a prefix instead of a
postfix. Defaults to \code{NULL}. Note handling of this parameter is expected to
change in future versions of this function.}

\item{path}{Passed to \code{\link[=write_officer]{write_officer()}}.}

\item{...}{Additional parameters passed to \code{\link[=write_officer]{write_officer()}} if save is
\code{TRUE}.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}

\item{allow_new}{If \code{TRUE} (default), return "0.1.0" if version can't be
found in the filename or the properties of the input rdocx or rpptx object
x.}

\item{.default}{Specification for initial version.}
}
\value{
Invisibly return a rdocx or rpptx object with an updated version
property.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{\link[=use_doc_version]{use_doc_version()}} is inspired by \code{\link[usethis:use_version]{usethis::use_version()}} and designed to
support semantic versioning for Microsoft Word or PowerPoint documents. The
document version is tracked as a custom file property and a component of the
document filename. If filename is supplied and the filename contains a
version number, the function ignores any version number stored as a document
property and overwrites the property with the new incremented version number.

\code{\link[=doc_version]{doc_version()}} is a helper function that returns the document version based
on a supplied filename or document properties.

The internals for this function are adapted from the
internal \code{idesc_bump_version()} function authored by Csárdi Gábor for the
\code{{desc}} package.
}
