% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_officer.R
\name{read_officer}
\alias{read_officer}
\alias{read_docx_ext}
\alias{read_pptx_ext}
\alias{read_xlsx_ext}
\title{Read a docx, pptx, potx, or xlsx file or use an existing object from officer
if provided}
\usage{
read_officer(
  filename = NULL,
  path = NULL,
  fileext = c("docx", "pptx", "xlsx"),
  x = NULL,
  arg = caller_arg(x),
  allow_null = TRUE,
  quiet = TRUE,
  call = parent.frame(),
  ...
)

read_docx_ext(
  filename = NULL,
  path = NULL,
  docx = NULL,
  allow_null = FALSE,
  quiet = TRUE
)

read_pptx_ext(
  filename = NULL,
  path = NULL,
  pptx = NULL,
  allow_null = FALSE,
  quiet = TRUE
)

read_xlsx_ext(
  filename = NULL,
  path = NULL,
  xlsx = NULL,
  allow_null = FALSE,
  quiet = TRUE
)
}
\arguments{
\item{filename, path}{File name and path. Default: \code{NULL}. Must include a
"docx", "pptx", or "xlsx" file path. "dotx" and "potx" files are also
supported.}

\item{fileext}{File extensions to allow without error. Defaults to "docx",
"pptx", "xlsx".}

\item{x}{A rdocx, rpptx, or rxlsx class object If x is provided, filename and
path are ignored. Default: \code{NULL}}

\item{arg}{Argument name of object to check. Used to improve
\code{\link[cli:cli_abort]{cli::cli_abort()}} messages. Defaults to \code{caller_arg(x)}.}

\item{allow_null}{If \code{TRUE}, function supports the default behavior of
\code{\link[officer:read_docx]{officer::read_docx()}}, \code{\link[officer:read_pptx]{officer::read_pptx()}}, or \code{\link[officer:read_xlsx]{officer::read_xlsx()}}
and returns an empty document if x, filename, and path are all \code{NULL}. If
\code{FALSE}, one of the three parameters must be supplied.}

\item{quiet}{If \code{FALSE}, warn if docx is provided when filename and/or path
are also provided. Default: \code{TRUE}.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}

\item{...}{Additional parameters passed to \code{\link[cli:cli_abort]{cli::cli_abort()}}}

\item{docx, pptx, xlsx}{A rdocx, rpptx, or rxlsx class object passed to the x
parameter of \code{\link[=read_officer]{read_officer()}} by the variant functions. Defaults to \code{NULL}.}
}
\value{
A rdocx, rpptx, or rxlsx object.
}
\description{
\code{\link[=read_officer]{read_officer()}} is a variant of \code{\link[officer:read_docx]{officer::read_docx()}},
\code{\link[officer:read_pptx]{officer::read_pptx()}}, and \code{\link[officer:read_xlsx]{officer::read_xlsx()}} that allows users to read
different Microsoft Office file types with a single function.
\code{\link[=read_docx_ext]{read_docx_ext()}}, \code{\link[=read_pptx_ext]{read_pptx_ext()}}, and \code{\link[=read_xlsx_ext]{read_xlsx_ext()}} are wrappers for
\code{\link[=read_officer]{read_officer()}} that require the matching input file type. All versions
allow both a filename and path (the officer functions only use a path). If a
rdocx, rpptx, or rxlsx class object is provided to x, the object is checked
based on the fileext parameter and then returned as is.
}
\seealso{
\code{\link[officer:read_docx]{officer::read_docx()}}
}
