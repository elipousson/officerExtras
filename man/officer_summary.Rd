% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/officer_summary.R
\name{officer_summary}
\alias{officer_summary}
\title{Summarize a rdocx or rpptx object}
\usage{
officer_summary(x, summary_type = "doc", index = NULL, call = caller_env())
}
\arguments{
\item{x}{A rdocx or rpptx object passed to \code{\link[officer:docx_summary]{officer::docx_summary()}},
\code{\link[officer:pptx_summary]{officer::pptx_summary()}}, \code{\link[officer:slide_summary]{officer::slide_summary()}}, or
\code{\link[officer:layout_summary]{officer::layout_summary()}}. If x is a data.frame created with one of those
functions, it is returned as is.}

\item{summary_type}{Summary type. Options "doc", "docx", "pptx", "slide", or
"layout". "doc" requires the data.frame include a "content_type" column but
allows columns for either a docx or pptx summary.}

\item{index}{slide index}

\item{call}{The execution environment of a currently running
function, e.g. \code{call = caller_env()}. The corresponding function
call is retrieved and mentioned in error messages as the source
of the error.

You only need to supply \code{call} when throwing a condition from a
helper function which wouldn't be relevant to mention in the
message.

Can also be \code{NULL} or a \link[rlang:topic-defuse]{defused function call} to
respectively not display any call or hard-code a code to display.

For more information about error calls, see \ifelse{html}{\link[rlang:topic-error-call]{Including function calls in error messages}}{\link[rlang:topic-error-call]{Including function calls in error messages}}.}
}
\value{
A data.frame object.
}
\description{
Summarize a rdocx or rpptx object
}
