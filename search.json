[{"path":"https://elipousson.github.io/officerExtras/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 officerExtras authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/officerExtras/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/officerExtras/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). officerExtras: Extra Helpers 'officer'. https://github.com/elipousson/officerExtras, https://elipousson.github.io/officerExtras/.","code":"@Manual{,   title = {officerExtras: Extra Helpers for 'officer'},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/officerExtras, https://elipousson.github.io/officerExtras/}, }"},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"officerextras","dir":"","previous_headings":"","what":"Extra Helpers for officer","title":"Extra Helpers for officer","text":"goal officerExtras provide helper convenience functions {officer} package.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Helpers for officer","text":"can install development version officerExtras like :","code":"pak::pkg_install(\"elipousson/officerExtras\")"},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extra Helpers for officer","text":"officerExtras package provides variety helper functions simplify process working officer. example, single read_officer() function works docx, pptx, xlsx files: officer uses print method save rdocx, rpptx, rxlsx objects back files. officerExtras provides write_officer() adds option pass filename path separately pass document properties officer::doc_properties(). package also wraps useful functions packages. convert_docx() uses rmarkdown::pandoc_convert() convert rdocx object Word document pandoc supported output format:","code":"library(officerExtras)  docx <- read_officer(filename = \"example.docx\", path = system.file(\"doc_examples\", package = \"officer\"))  pptx <- read_officer(filename = \"example.pptx\", path = system.file(\"doc_examples\", package = \"officer\")) withr::with_tempdir({   write_officer(docx, \"write-example.docx\", modified_by = \"officerExtras\", title = \"Document Title set by doc_properties\", subject = \"Microsoft Word, R\")    example_docx <- read_officer(\"write-example.docx\")    officer::doc_properties(example_docx) }) #>               tag                                value #> 1           title Document Title set by doc_properties #> 2         subject                    Microsoft Word, R #> 3         creator                               author #> 4        keywords                                      #> 5     description                   these are comments #> 6  lastModifiedBy                        officerExtras #> 7        revision                                   11 #> 8         created                 2017-04-26T13:10:00Z #> 9        modified                 2023-03-20T12:34:20Z #> 10       category convert_docx(docx, to = \"markdown\")"},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Extra Helpers for officer","text":"number related projects extending officer working OOXML R languages.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"extending-officer","dir":"","previous_headings":"Related projects","what":"Extending officer","title":"Extra Helpers for officer","text":"gto: allow users insert gt tables officeverse. onbrand: R package provide systematic method script support different Word PowerPoint templates. officerWinTools: R package complement officer package using Microsoft Office Windows environment.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"working-with-microsoft-office-documents-with-r","dir":"","previous_headings":"Related projects","what":"Working with Microsoft Office documents with R","title":"Extra Helpers for officer","text":"docxtractr: Extract Tables Microsoft Word Documents R stylex: R package help update docx style files. deef: Data extractor scripts electronic forms, compatible Microsoft Word files.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"other-tools-for-working-with-microsoft-office-documents","dir":"","previous_headings":"Related projects","what":"Other tools for working with Microsoft Office documents","title":"Extra Helpers for officer","text":"python-openxml/python-docx:Create modify Word documents Python","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"Wrappers officer::body_add_par(), officer::body_add_gg(), officer::body_add_xml() use cursor_docx() helper function allow users pass value keyword, id, index value used place \"cursor\" within document using single function. pos = NULL, add_to_body() calls officer::body_add() instead officer::body_add_par(). add_text_to_body() passes value glue::glue() add support glue string interpolation. add_gt_to_body() converts gt tables OOXML gt::as_word(). add_gg_to_body() adds caption following plots using labels plot object.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"","code":"add_to_body(   docx,   keyword = NULL,   id = NULL,   index = NULL,   value = NULL,   str = NULL,   pos = \"after\",   call = parent.frame(),   ... )  add_text_to_body(   docx,   value,   style = NULL,   pos = \"after\",   .na = \"NA\",   .null = NULL,   .envir = parent.frame(),   ... )  add_xml_to_body(docx, str, pos = \"after\", ...)  add_gt_to_body(   docx,   gt_object,   align = \"center\",   caption_location = c(\"top\", \"bottom\", \"embed\"),   caption_align = \"left\",   split = FALSE,   keep_with_next = TRUE,   pos = \"after\",   ... )  add_gg_to_body(   docx,   value,   caption = \"title\",   caption_style = style,   autonum = NULL,   style = \"Normal\",   pos = \"after\",   ... )  add_value_with_keys(docx, value, ..., .f = add_text_to_body)  add_str_with_keys(docx, str, ..., .f = add_xml_to_body)"},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"docx rdocx object. keyword, id keyword string used place cursor officer::cursor_reach() bookmark id officer::cursor_bookmark(). Defaults NULL. keyword id provided, gt object inserted front document. index integer matching doc_index value appearing summary docx object created officer::docx_summary(). index paragraph value, text pargraph used keyword. value object add document. Supported objects vectors, data.frame, graphics, block formatted paragraphs, unordered list formatted paragraphs, pretty tables package flextable, 'Microsoft' charts package mschart. str wml string pos add new element relative cursor, one \"\", \"\", \"\". call execution environment currently running function passed cli::cli_abort(). Defaults parent.frame() ... Additional parameters passed officer::body_add_par(), officer::body_add_gg(), officer::body_add(). style paragraph style name. names available function styles_info names Word styles defined base document (see argument path read_docx). .na [character(1): ‘NA’] Value replace NA values . NULL missing values propagated, NA result cause NA output. Otherwise value replaced value .na. .null [character(1): ‘character()’] Value replace NULL values . character() whole output character(). NULL NULL values dropped (paste0()). Otherwise value replaced value .null. .envir [environment: parent.frame()] Environment evaluate expression . Expressions evaluated left right. .x environment, expressions evaluated environment .envir ignored. NULL passed, equivalent emptyenv(). gt_object gt object converted OOXML string gt::as_word() passed add_xml_to_body() str parameter. Required add_gt_to_body(). portion code transform gt_object OOXML insert XML docx object adapted gto package Ellis Hughes. align option table alignment. Can either \"center\" (default), \"left\", \"right\". caption_location Determines caption positioned. can either \"top\" (default), \"bottom\", \"embed\". caption_align Determines alignment caption. either \"left\" (default), \"center\", \"right\". option used caption_location set \"embed\". split TRUE FALSE (default) value indicates whether activate Word option Allow row break across pages. keep_with_next TRUE (default) FALSE value indicates whether table use Word option keep rows together. caption Name ggplot2 label use caption plot passed value label value. Defaults \"title\". caption_style Passed style officer::body_add_caption(). Defaults value style. autonum object generated function run_autonum .f function takes docx value parameter returns rdocx object. keyword parameter must also supported named TRUE. Defaults add_text_to_body().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"rdocx object xml, gt tables, paragraphs text added.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"Using add_value_with_keys() add_str_with_keys() add_value_with_keys() supports value vectors length 1 longer. value named, names assumed keywords indicating cursor position adding value vector. value named, keyword parameter length value must provided. named = FALSE, keyword parameter required. Add add_str_with_keys() works identically uses str parameter .f defaults add_xml_to_body().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"Ellis Hughes ellis.h.hughes@gsk.com (ORCID)","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"","code":"if (rlang::is_installed(\"gt\")) {   docx <- read_docx_ext(     filename = \"example.docx\",     path = system.file(\"doc_examples\", package = \"officer\")   )    tab_1 <-     gt::gt(       gt::exibble,       rowname_col = \"row\",       groupname_col = \"group\"     )    add_gt_to_body(     docx,     tab_1,     keyword = \"Title 1\"   )    tab_str <- gt::as_word(tab_1)    add_str_with_keys(     docx,     str = c(\"Title 1\" = tab_str, \"Title 2\" = tab_str)   ) } #> rdocx document with 23 element(s) #>  #> * styles: #>                 Normal              heading 1              heading 2  #>            \"paragraph\"            \"paragraph\"            \"paragraph\"  #> Default Paragraph Font           Normal Table                No List  #>            \"character\"                \"table\"            \"numbering\"  #>            Titre 1 Car            Titre 2 Car          Light Shading  #>            \"character\"            \"character\"                \"table\"  #>         List Paragraph                 header            En-tête Car  #>            \"paragraph\"            \"paragraph\"            \"character\"  #>                 footer       Pied de page Car  #>            \"paragraph\"            \"character\"  #>  #> * Content at cursor location: #>      row_id is_header cell_id             text col_span row_span content_type #> 1.1       1      TRUE       1                         1        1   table cell #> 1.9       2     FALSE       1            grp_a        1        1   table cell #> 1.10      3     FALSE       1            row_1        1        1   table cell #> 1.18      4     FALSE       1            row_2        1        1   table cell #> 1.26      5     FALSE       1            row_3        1        1   table cell #> 1.34      6     FALSE       1            row_4        1        1   table cell #> 1.42      7     FALSE       1            grp_b        1        1   table cell #> 1.43      8     FALSE       1            row_5        1        1   table cell #> 1.51      9     FALSE       1            row_6        1        1   table cell #> 1.59     10     FALSE       1            row_7        1        1   table cell #> 1.67     11     FALSE       1            row_8        1        1   table cell #> 2.2       1      TRUE       2              num        1        1   table cell #> 2.11      3     FALSE       2        1.111e-01        1        1   table cell #> 2.19      4     FALSE       2        2.222e+00        1        1   table cell #> 2.27      5     FALSE       2        3.333e+01        1        1   table cell #> 2.35      6     FALSE       2        4.444e+02        1        1   table cell #> 2.44      8     FALSE       2        5.550e+03        1        1   table cell #> 2.52      9     FALSE       2               NA        1        1   table cell #> 2.60     10     FALSE       2        7.770e+05        1        1   table cell #> 2.68     11     FALSE       2        8.880e+06        1        1   table cell #> 3.3       1      TRUE       3             char        1        1   table cell #> 3.12      3     FALSE       3          apricot        1        1   table cell #> 3.20      4     FALSE       3           banana        1        1   table cell #> 3.28      5     FALSE       3          coconut        1        1   table cell #> 3.36      6     FALSE       3           durian        1        1   table cell #> 3.45      8     FALSE       3               NA        1        1   table cell #> 3.53      9     FALSE       3              fig        1        1   table cell #> 3.61     10     FALSE       3       grapefruit        1        1   table cell #> 3.69     11     FALSE       3         honeydew        1        1   table cell #> 4.4       1      TRUE       4             fctr        1        1   table cell #> 4.13      3     FALSE       4              one        1        1   table cell #> 4.21      4     FALSE       4              two        1        1   table cell #> 4.29      5     FALSE       4            three        1        1   table cell #> 4.37      6     FALSE       4             four        1        1   table cell #> 4.46      8     FALSE       4             five        1        1   table cell #> 4.54      9     FALSE       4              six        1        1   table cell #> 4.62     10     FALSE       4            seven        1        1   table cell #> 4.70     11     FALSE       4            eight        1        1   table cell #> 5.5       1      TRUE       5             date        1        1   table cell #> 5.14      3     FALSE       5       2015-01-15        1        1   table cell #> 5.22      4     FALSE       5       2015-02-15        1        1   table cell #> 5.30      5     FALSE       5       2015-03-15        1        1   table cell #> 5.38      6     FALSE       5       2015-04-15        1        1   table cell #> 5.47      8     FALSE       5       2015-05-15        1        1   table cell #> 5.55      9     FALSE       5       2015-06-15        1        1   table cell #> 5.63     10     FALSE       5               NA        1        1   table cell #> 5.71     11     FALSE       5       2015-08-15        1        1   table cell #> 6.6       1      TRUE       6             time        1        1   table cell #> 6.15      3     FALSE       6            13:35        1        1   table cell #> 6.23      4     FALSE       6            14:40        1        1   table cell #> 6.31      5     FALSE       6            15:45        1        1   table cell #> 6.39      6     FALSE       6            16:50        1        1   table cell #> 6.48      8     FALSE       6            17:55        1        1   table cell #> 6.56      9     FALSE       6               NA        1        1   table cell #> 6.64     10     FALSE       6            19:10        1        1   table cell #> 6.72     11     FALSE       6            20:20        1        1   table cell #> 7.7       1      TRUE       7         datetime        1        1   table cell #> 7.16      3     FALSE       7 2018-01-01 02:22        1        1   table cell #> 7.24      4     FALSE       7 2018-02-02 14:33        1        1   table cell #> 7.32      5     FALSE       7 2018-03-03 03:44        1        1   table cell #> 7.40      6     FALSE       7 2018-04-04 15:55        1        1   table cell #> 7.49      8     FALSE       7 2018-05-05 04:00        1        1   table cell #> 7.57      9     FALSE       7 2018-06-06 16:11        1        1   table cell #> 7.65     10     FALSE       7 2018-07-07 05:22        1        1   table cell #> 7.73     11     FALSE       7               NA        1        1   table cell #> 8.8       1      TRUE       8         currency        1        1   table cell #> 8.17      3     FALSE       8           49.950        1        1   table cell #> 8.25      4     FALSE       8           17.950        1        1   table cell #> 8.33      5     FALSE       8            1.390        1        1   table cell #> 8.41      6     FALSE       8        65100.000        1        1   table cell #> 8.50      8     FALSE       8         1325.810        1        1   table cell #> 8.58      9     FALSE       8           13.255        1        1   table cell #> 8.66     10     FALSE       8               NA        1        1   table cell #> 8.74     11     FALSE       8            0.440        1        1   table cell"},{"path":"https://elipousson.github.io/officerExtras/reference/check_office_fileext.html","id":null,"dir":"Reference","previous_headings":"","what":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","title":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","text":"Check file path docx, pptx, xlsx file extension","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_office_fileext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","text":"","code":"check_office_fileext(   x,   arg = caller_arg(x),   fileext = c(\"docx\", \"pptx\", \"xlsx\"),   call = parent.frame(),   ... )  check_docx_fileext(x, arg = caller_arg(x), call = parent.frame(), ...)  check_pptx_fileext(x, arg = caller_arg(x), call = parent.frame(), ...)  check_xlsx_fileext(x, arg = caller_arg(x), call = parent.frame(), ...)"},{"path":"https://elipousson.github.io/officerExtras/reference/check_office_fileext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","text":"x Object check. arg Argument name object check. Used improve cli::cli_abort() messages. Defaults caller_arg(x). fileext File extensions allow without error. Defaults \"docx\", \"pptx\", \"xlsx\". call execution environment currently running function passed cli::cli_abort(). Defaults parent.frame() ... Additional parameters passed cli::cli_abort()","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","title":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","text":"Check x rdocx, rpptx, rxlsx object","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","text":"","code":"check_officer(   x,   arg = caller_arg(x),   what = c(\"rdocx\", \"rpptx\", \"rxlsx\"),   call = parent.frame(),   ... )  check_docx(x, arg = caller_arg(x), call = parent.frame(), ...)  check_pptx(x, arg = caller_arg(x), call = parent.frame(), ...)  check_xlsx(x, arg = caller_arg(x), call = parent.frame(), ...)"},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","text":"x Object check. arg Argument name object check. Used improve cli::cli_abort() messages. Defaults caller_arg(x). Class names check call execution environment currently running function passed cli::cli_abort(). Defaults parent.frame() ... Additional parameters passed cli::cli_abort()","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","title":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","text":"Check object error object data.frame required column names summary data.frame created rdocx rpptx object. Optionally check number rows, specific content_type value, tables included document summary created .","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","text":"","code":"check_officer_summary(   x,   n = NULL,   content_type = NULL,   summary_type = \"doc\",   tables = FALSE,   ...,   arg = caller_arg(x),   call = parent.frame() )"},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","text":"x object check data.frame object created officer::docx_summary() another summary function. n Required number rows. Optional. n length 1, checks make sure number rows within range max(n) min(n). Defaults NULL. content_type Required content_type, e.g. \"paragraph\", \"table cell\", \"image\". Optional. Defaults NULL. summary_type Summary type. Options \"doc\", \"docx\", \"pptx\", \"slide\", \"layout\". \"doc\" requires data.frame include \"content_type\" column allows columns either docx pptx summary. tables TRUE, require summary include column names indicated table present rdocx rpptx summary. ... Additional parameters passed cli::cli_abort() arg Argument name use error messages. Defaults caller_arg(x) call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"Use rmarkdown::pandoc_convert() convert rodcx object Word file another format pandoc. \"\" parameter contains file extension, assumed output file name.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"","code":"convert_docx(   docx,   to = NULL,   input = NULL,   output = NULL,   path = NULL,   options = NULL,   extract_media = TRUE,   overwrite = TRUE,   quiet = TRUE,   ... )"},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"docx rdocx object path docx file. Optional input provided. Format convert (specified, must specify output) input Character vector containing paths input files (files must UTF-8 encoded) output Output file (specified determined based format converted ). path File path converted file passed wd parameter rmarkdown::pandoc_convert(). docx rdocx object, path defaults current working directory instead base directory input file path. options Character vector command line options pass pandoc. extract_media TRUE, append \"--extract-media=.\" options. Defaults FALSE. overwrite TRUE (default), remove file path already exists. FALSE file exists, function aborts. quiet TRUE, suppress alert messages pass FALSE verbose parameter rmarkdown::pandoc_convert(). Defaults TRUE. ... Arguments passed rmarkdown::pandoc_convert Format convert (specified format determined based file extension input). citeproc TRUE run pandoc-citeproc filter (processing citations) part conversion.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"Executes call pandoc using rmarkdown::pandoc_convert() create file officer object docx file.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"Supported input output formats described pandoc user guide. system path well version pandoc shipped RStudio (running RStudio) scanned pandoc highest version available used.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"","code":"if (FALSE) { if (interactive()) {   docx <- read_officer(     system.file(\"doc_examples/example.docx\", package = \"officer\")   )    convert_docx(       docx,       to = \"markdown\"     )    withr::with_tempdir({     convert_docx(       docx,       output = \"docx.html\"     )   }) } }"},{"path":"https://elipousson.github.io/officerExtras/reference/cursor_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","title":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","text":"combined function setting cursor position officer::cursor_reach(), officer::cursor_bookmark(), using doc_index value officer::docx_summary().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/cursor_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","text":"","code":"cursor_docx(docx, keyword = NULL, id = NULL, index = NULL, quiet = FALSE)"},{"path":"https://elipousson.github.io/officerExtras/reference/cursor_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","text":"docx rdocx object. keyword, id keyword string used place cursor officer::cursor_reach() bookmark id officer::cursor_bookmark(). Defaults NULL. keyword id provided, gt object inserted front document. index integer matching doc_index value appearing summary docx object created officer::docx_summary(). index paragraph value, text pargraph used keyword. quiet FALSE (default) warn keyword found.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/dims_docx_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","title":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","text":"function extends officer::docx_dim() also returning body text dimensions within margins, aspect ratio page body, page orientation string (\"landscape\" \"portrait\").","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/dims_docx_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","text":"","code":"dims_docx_ext(docx)"},{"path":"https://elipousson.github.io/officerExtras/reference/dims_docx_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","text":"docx rdocx object get dimensions .","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officerExtras-package.html","id":null,"dir":"Reference","previous_headings":"","what":"officerExtras: Extra Helpers for 'officer' — officerExtras-package","title":"officerExtras: Extra Helpers for 'officer' — officerExtras-package","text":"Helper convenience functions using 'officer' package modify docx files.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officerExtras-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"officerExtras: Extra Helpers for 'officer' — officerExtras-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"Unzip docx pptx file temporary directory, check directory contains media folder, copy media files directory set dir. rdocx rpptx object provided, files copied temporary package_dir associated object (accessible via x[[\"package_dir\"]]).","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"","code":"officer_media(   filename = NULL,   path = NULL,   x = NULL,   target = \"media\",   list = FALSE,   overwrite = TRUE )"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"filename, path File name path docx pptx file. One two must provided. Ignored x provided. Defaults NULL. x rdocx rpptx object containing one media file. target Folder name path copy media files. dir created folder exists location. list TRUE, display message listing files contained docx pptx file copy files dir. Defaults FALSE. overwrite TRUE (default), overwrite files names target path. FALSE, abort files names already exist.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"","code":"officer_media(   system.file(\"doc_examples/example.pptx\", package = \"officer\"),   list = TRUE ) #> ℹ 1 media file found in example.pptx #> • image1.png"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a rdocx or rpptx object — officer_summary","title":"Summarize a rdocx or rpptx object — officer_summary","text":"Summarize rdocx rpptx object","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a rdocx or rpptx object — officer_summary","text":"","code":"officer_summary(x, summary_type = \"doc\", index = NULL)"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a rdocx or rpptx object — officer_summary","text":"x rdocx rpptx object passed officer::docx_summary(), officer::pptx_summary(), officer::slide_summary(), officer::layout_summary(). x data.frame created one functions, returned . summary_type Summary type. Options \"doc\", \"docx\", \"pptx\", \"slide\", \"layout\". \"doc\" requires data.frame include \"content_type\" column allows columns either docx pptx summary. index slide index","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a rdocx or rpptx object — officer_summary","text":"data.frame object.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tables from a rdocx or rpptx object — officer_tables","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"Get one tables rdocx rpptx object. Functions based example code extracting Word document PowerPoint slides officeverse documentation.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"","code":"officer_tables(x, index = NULL, has_header = TRUE)"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"x rdocx rpptx object data.frame created officer_summary() index index value matching doc_index value table summary data.frame, Default: NULL has_header TRUE, tables expected implicit headers even object Default: TRUE","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"data.frame list data.frame (list objects).","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"","code":"docx <- read_docx_ext(   filename = \"example.docx\",   path = system.file(\"doc_examples\", package = \"officer\") )  officer_tables(docx) #> data frame with 0 columns and 0 rows  pptx <- read_pptx_ext(   filename = \"example.pptx\",   path = system.file(\"doc_examples\", package = \"officer\") )  officer_tables(pptx)[[1]] #>   Header 1  Header 2       Header 3 #> 2         A    12.23      blah blah #> 3         B     1.23 blah blah blah #> 4         B      9.0          Salut #> 5         C        6          Hello"},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"read_docx_ext(), read_pptx_ext(), read_xlsx_ext() wrappers read_officer() wrapper officer::read_docx(), officer::read_pptx(), officer::read_xlsx(). function uses filename path (original officer functions use path) default use rdocx, rpptx, rxlsx class object provided.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"","code":"read_officer(   filename = NULL,   path = NULL,   fileext = c(\"docx\", \"pptx\", \"xlsx\"),   x = NULL,   arg = caller_arg(x),   quiet = TRUE,   call = parent.frame(),   ... )  read_docx_ext(filename = NULL, path = NULL, docx = NULL, quiet = TRUE)  read_pptx_ext(filename = NULL, path = NULL, pptx = NULL, quiet = TRUE)  read_xlsx_ext(filename = NULL, path = NULL, xlsx = NULL, quiet = TRUE)"},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"filename, path File name path. Default: NULL. Must include \"docx\", \"pptx\", \"xlsx\" file path. \"dotx\" \"potx\" files also supported. fileext File extensions allow without error. Defaults \"docx\", \"pptx\", \"xlsx\". x rdocx, rpptx, rxlsx class object, docx provided, filename path ignored. Default: NULL arg Argument name object check. Used improve cli::cli_abort() messages. Defaults caller_arg(x). quiet FALSE, warn docx provided filename /path also provided. Default: TRUE. call execution environment currently running function passed cli::cli_abort(). Defaults parent.frame() ... Additional parameters passed cli::cli_abort() docx, pptx, xlsx rdocx, rpptx, rxlsx class object passed x parameter corresponding function. Defaults NULL.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"rdocx, rpptx, rxlsx object.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"Write rdocx, rpptx, rxlsx object file","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"","code":"write_officer(x, path, overwrite = TRUE, modified_by = Sys.getenv(\"USER\"), ...)"},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"x rdocx, rpptx, rxlsx object save. Document properties set rxlsx objects. path File path. overwrite TRUE (default), remove file path already exists. FALSE file exists, function aborts. modified_by withr package installed, modified_by overrides default value lastModifiedBy property assigned output file officer. Defaults Sys.getenv(\"USER\") (value used officer). ... Arguments passed officer::set_doc_properties title,subject,creator,description text fields created date object values named list (names field names), element single character value specifying value associated corresponding field name. values provided, argument ... ignored.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"Returns input object (invisibly) writes rdocx, rpptx, rxlsx object file name location matching provided path.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009004","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9004","title":"officerExtras 0.0.0.9004","text":"Update officer_media() support rdocx rpptx objects fix overwrite check function errors files already exist. Add ggplot2 Suggests (used test add_gg_to_body()). Add new convert_docx() function support pandoc conversion rdocx objects docx files (requires rmarkdown Suggests). Update add_gt_to_body() incorporate implementation {gto} (better support table captions) credit Ellis Hughes. Update required adding xml2 Imports.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009003","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9003","title":"officerExtras 0.0.0.9003","text":"Add support writing custom lastModifiedBy property write_officer(). Add new functionality officer_summary() support layout slide summaries. Export check_officer_summary() helper function. Add new dims_docx_ext() function wrapping officer::docx_dim() Add add_gg_to_body() function wrapping officer::body_add_gg()","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009002","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9002","title":"officerExtras 0.0.0.9002","text":"Add support gt::as_word() parameters add_gt_to_body(). Add support “dotx” files read_officer() Fix error filename = NULL read_officer() Add officer_properties(), officer_tables(), officer_media() functions.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009001","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9001","title":"officerExtras 0.0.0.9001","text":"main change update functions now support full range officer class objects work pptx xlsx well docx files. read_docx_ext() now wrapper general read_officer() function. write_docx() replaced write_officer() update also includes two new functions vectorized versions add_to_body(): add_value_with_keys() add_str_with_keys(). add_to_body() updated fixes improvements making keyword, id, + index parameters optional using officer::body_add_par() default officer::body_add() (due odd error messages using latter lack support pos parameter). Finally, test coverage currently around 64% seems like good start new package.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009000","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9000","title":"officerExtras 0.0.0.9000","text":"Initial set package functions including: read_docx_ext() write_docx() add_to_body(), add_text_to_body(), add_xml_to_body(), add_gt_to_body() check_docx() check_docx_fileext()","code":""}]
