[{"path":"https://elipousson.github.io/officerExtras/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 officerExtras authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/officerExtras/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/officerExtras/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). officerExtras: Extra Helpers 'officer'. https://github.com/elipousson/officerExtras, https://elipousson.github.io/officerExtras/.","code":"@Manual{,   title = {officerExtras: Extra Helpers for 'officer'},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/officerExtras, https://elipousson.github.io/officerExtras/}, }"},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"officerextras-","dir":"","previous_headings":"","what":"Extra Helpers for officer","title":"Extra Helpers for officer","text":"goal officerExtras provide helper convenience functions {officer} package.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Helpers for officer","text":"can install development version officerExtras like :","code":"pak::pkg_install(\"elipousson/officerExtras\")"},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extra Helpers for officer","text":"officerExtras package provides variety helper functions simplify process working officer. example, single read_officer() function works docx, pptx, xlsx files: officer uses print method save rdocx, rpptx, rxlsx objects back files. officerExtras provides write_officer() adds option pass filename path separately pass document properties officer::doc_properties(). package also wraps useful functions packages. convert_docx() uses rmarkdown::pandoc_convert() convert rdocx object Word document pandoc supported output format:","code":"library(officerExtras)  docx <- read_officer(filename = \"example.docx\", path = system.file(\"doc_examples\", package = \"officer\"))  pptx <- read_officer(filename = \"example.pptx\", path = system.file(\"doc_examples\", package = \"officer\")) withr::with_tempdir({   write_officer(docx, \"write-example.docx\", modified_by = \"officerExtras\", title = \"Document Title set by doc_properties\", subject = \"Microsoft Word, R\")    example_docx <- read_officer(\"write-example.docx\")    officer::doc_properties(example_docx) }) #>               tag                                value #> 1           title Document Title set by doc_properties #> 2         subject                    Microsoft Word, R #> 3         creator                               author #> 4        keywords                                      #> 5     description                   these are comments #> 6  lastModifiedBy                        officerExtras #> 7        revision                                   12 #> 8         created                 2017-04-26T13:10:00Z #> 9        modified                 2023-06-22T11:04:39Z #> 10       category convert_docx(docx, to = \"markdown\")"},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Extra Helpers for officer","text":"number related projects extending officer working OOXML R languages.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"extending-officer","dir":"","previous_headings":"Related projects","what":"Extending officer","title":"Extra Helpers for officer","text":"gto: allow users insert gt tables officeverse. onbrand: R package provide systematic method script support different Word PowerPoint templates. officerWinTools: R package complement officer package using Microsoft Office Windows environment.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"working-with-microsoft-office-documents-with-r","dir":"","previous_headings":"Related projects","what":"Working with Microsoft Office documents with R","title":"Extra Helpers for officer","text":"docxtractr: Extract Tables Microsoft Word Documents R stylex: R package help update docx style files. deef: Data extractor scripts electronic forms, compatible Microsoft Word files.","code":""},{"path":"https://elipousson.github.io/officerExtras/index.html","id":"other-tools-for-working-with-microsoft-office-documents","dir":"","previous_headings":"Related projects","what":"Other tools for working with Microsoft Office documents","title":"Extra Helpers for officer","text":"python-docx:Create modify Word documents Python Docx-templates: Template-based docx report creation Node browser docx: Easily generate modify .docx files JS/TS. Works Node Browser. docxtemplater: Generate docx, pptx, xlsx templates (Word, Powerpoint Excel documents), Node.js, Browser command line","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_list_to_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a formatted list of items to a rdocx object — add_list_to_body","title":"Add a formatted list of items to a rdocx object — add_list_to_body","text":"function assumes input docx object list style. Use read_docx_ext() allow_null = TRUE create new rdocx object \"List Bullet\" \"List Number\" styles. \"List Paragraph\" can used resulting formatted list bullets numbers.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_list_to_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a formatted list of items to a rdocx object — add_list_to_body","text":"","code":"add_list_to_body(   docx,   values,   style = \"List Bullet\",   keep_na = FALSE,   before = NULL,   after = \"\",   ... )"},{"path":"https://elipousson.github.io/officerExtras/reference/add_list_to_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a formatted list of items to a rdocx object — add_list_to_body","text":"docx rdocx object. values Character vector values list. style Style use list values, Default: 'List Bullet' keep_na TRUE, keep NA values values Default: FALSE Value insert list, Default: NULL Value insert list, Default: '' ... Additional parameters passed cursor_docx()","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_list_to_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a formatted list of items to a rdocx object — add_list_to_body","text":"modified rdocx object.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"Wrappers officer::body_add_par(), officer::body_add_gg(), officer::body_add_xml() use cursor_docx() helper function allow users pass value keyword, id, index value used place \"cursor\" within document using single function. pos = NULL, add_to_body() calls officer::body_add() instead officer::body_add_par(). value gt_tbl object, value passed gt_object parameter add_gt_to_body(). add_text_to_body() passes value glue::glue() add support glue string interpolation. add_gt_to_body() converts gt tables OOXML gt::as_word(). add_gg_to_body() adds caption following plots using labels plot object.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"","code":"add_to_body(   docx,   keyword = NULL,   id = NULL,   index = NULL,   value = NULL,   str = NULL,   style = NULL,   pos = \"after\",   ...,   gt_object = NULL,   call = caller_env() )  add_text_to_body(   docx,   value,   style = NULL,   pos = \"after\",   .na = \"NA\",   .null = NULL,   .envir = parent.frame(),   ... )  add_xml_to_body(docx, str, pos = \"after\", ..., call = caller_env())  add_gt_to_body(   docx,   gt_object,   align = \"center\",   caption_location = c(\"top\", \"bottom\", \"embed\"),   caption_align = \"left\",   split = FALSE,   keep_with_next = TRUE,   pos = \"after\",   tablecontainer = TRUE,   ...,   call = caller_env() )  add_gg_to_body(   docx,   value,   caption = \"title\",   caption_style = style,   autonum = NULL,   style = \"Normal\",   pos = \"after\",   ... )  add_value_with_keys(docx, value, ..., .f = add_text_to_body)  add_str_with_keys(docx, str, ..., .f = add_xml_to_body)"},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"docx rdocx object. keyword, id keyword string used place cursor officer::cursor_reach() bookmark id officer::cursor_bookmark(). Defaults NULL. keyword id provided, gt object inserted front document. index integer matching doc_index value appearing summary docx object created officer::docx_summary(). index paragraph value, text pargraph used keyword. value object add document. Supported objects vectors, data.frame, graphics, block formatted paragraphs, unordered list formatted paragraphs, pretty tables package flextable, 'Microsoft' charts package mschart. str wml string style paragraph style name. names available function styles_info names Word styles defined base document (see argument path read_docx). pos add new element relative cursor, one \"\", \"\", \"\". ... Additional parameters passed officer::body_add_par(), officer::body_add_gg(), officer::body_add(). gt_object gt object converted OOXML string gt::as_word() passed add_xml_to_body() str parameter. Required add_gt_to_body(). call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. .na [character(1): ‘NA’] Value replace NA values . NULL missing values propagated, NA result cause NA output. Otherwise value replaced value .na. .null [character(1): ‘character()’] Value replace NULL values . character() whole output character(). NULL NULL values dropped (paste0()). Otherwise value replaced value .null. .envir [environment: parent.frame()] Environment evaluate expression . Expressions evaluated left right. .x environment, expressions evaluated environment .envir ignored. NULL passed, equivalent emptyenv(). align Table alignment scalar<character> // default: \"center\" option table alignment. Can either \"center\", \"left\", \"right\". caption_location Caption location singl-kw:[top|bottom|embed] // default: \"top\" Determines caption positioned. can either \"top\", \"bottom\", \"embed\". caption_align Caption alignment Determines alignment caption. either \"left\" (default), \"center\", \"right\". option used caption_location set \"embed\". split Allow splitting scalar<logical> // default: FALSE logical value indicates whether activate Word option Allow row break across pages. keep_with_next Keeping rows together scalar<logical> // default: TRUE logical value indicates whether table use Word option keep rows together. tablecontainer TRUE (default), add tables inside tablecontainer tag automatically adds table number converts gt title table caption. feature based code gto package Ellis Hughes transform gt_object OOXML insert XML docx object. caption Name ggplot2 label use caption plot passed value label value. Defaults \"title\". caption_style Passed style officer::body_add_caption(). Defaults value style. autonum object generated function run_autonum .f function takes docx value parameter returns rdocx object. keyword parameter must also supported named TRUE. Defaults add_text_to_body().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"rdocx object xml, gt tables, paragraphs text added.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"Using add_value_with_keys() add_str_with_keys() add_value_with_keys() supports value vectors length 1 longer. value named, names assumed keywords indicating cursor position adding value vector. value named, keyword parameter length value must provided. named = FALSE, keyword parameter required. Add add_str_with_keys() works identically uses str parameter .f defaults add_xml_to_body(). Note, July 2023, add_value_with_keys() add_str_with_keys() superseded vec_add_to_body().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"Ellis Hughes ellis.h.hughes@gsk.com (ORCID)","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/add_to_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a xml string, text paragraph, or gt object at a specified position in a\nrdocx object — add_to_body","text":"","code":"if (rlang::is_installed(\"gt\")) {   docx_example <- read_docx_ext(     filename = \"example.docx\",     path = system.file(\"doc_examples\", package = \"officer\")   )    tab_1 <-     gt::gt(       gt::exibble,       rowname_col = \"row\",       groupname_col = \"group\"     )    add_gt_to_body(     docx_example,     tab_1,     keyword = \"Title 1\"   )    tab_str <- gt::as_word(tab_1)    add_str_with_keys(     docx_example,     str = c(\"Title 1\" = tab_str, \"Title 2\" = tab_str)   ) } #> rdocx document with 23 element(s) #>  #> * styles: #>                 Normal              heading 1              heading 2  #>            \"paragraph\"            \"paragraph\"            \"paragraph\"  #> Default Paragraph Font           Normal Table                No List  #>            \"character\"                \"table\"            \"numbering\"  #>            Titre 1 Car            Titre 2 Car          Light Shading  #>            \"character\"            \"character\"                \"table\"  #>         List Paragraph                 header            En-tête Car  #>            \"paragraph\"            \"paragraph\"            \"character\"  #>                 footer       Pied de page Car  #>            \"paragraph\"            \"character\"  #>  #> * Content at cursor location: #>      row_id is_header cell_id             text col_span row_span content_type #> 1.1       1      TRUE       1                         1        1   table cell #> 1.9       2     FALSE       1            grp_a        8        1   table cell #> 1.17      3     FALSE       1            row_1        1        1   table cell #> 1.25      4     FALSE       1            row_2        1        1   table cell #> 1.33      5     FALSE       1            row_3        1        1   table cell #> 1.41      6     FALSE       1            row_4        1        1   table cell #> 1.49      7     FALSE       1            grp_b        8        1   table cell #> 1.57      8     FALSE       1            row_5        1        1   table cell #> 1.65      9     FALSE       1            row_6        1        1   table cell #> 1.73     10     FALSE       1            row_7        1        1   table cell #> 1.81     11     FALSE       1            row_8        1        1   table cell #> 2.2       1      TRUE       2              num        1        1   table cell #> 2.10      2     FALSE       2             <NA>        0        1   table cell #> 2.18      3     FALSE       2        1.111e-01        1        1   table cell #> 2.26      4     FALSE       2        2.222e+00        1        1   table cell #> 2.34      5     FALSE       2        3.333e+01        1        1   table cell #> 2.42      6     FALSE       2        4.444e+02        1        1   table cell #> 2.50      7     FALSE       2             <NA>        0        1   table cell #> 2.58      8     FALSE       2        5.550e+03        1        1   table cell #> 2.66      9     FALSE       2               NA        1        1   table cell #> 2.74     10     FALSE       2        7.770e+05        1        1   table cell #> 2.82     11     FALSE       2        8.880e+06        1        1   table cell #> 3.3       1      TRUE       3             char        1        1   table cell #> 3.11      2     FALSE       3             <NA>        0        1   table cell #> 3.19      3     FALSE       3          apricot        1        1   table cell #> 3.27      4     FALSE       3           banana        1        1   table cell #> 3.35      5     FALSE       3          coconut        1        1   table cell #> 3.43      6     FALSE       3           durian        1        1   table cell #> 3.51      7     FALSE       3             <NA>        0        1   table cell #> 3.59      8     FALSE       3               NA        1        1   table cell #> 3.67      9     FALSE       3              fig        1        1   table cell #> 3.75     10     FALSE       3       grapefruit        1        1   table cell #> 3.83     11     FALSE       3         honeydew        1        1   table cell #> 4.4       1      TRUE       4             fctr        1        1   table cell #> 4.12      2     FALSE       4             <NA>        0        1   table cell #> 4.20      3     FALSE       4              one        1        1   table cell #> 4.28      4     FALSE       4              two        1        1   table cell #> 4.36      5     FALSE       4            three        1        1   table cell #> 4.44      6     FALSE       4             four        1        1   table cell #> 4.52      7     FALSE       4             <NA>        0        1   table cell #> 4.60      8     FALSE       4             five        1        1   table cell #> 4.68      9     FALSE       4              six        1        1   table cell #> 4.76     10     FALSE       4            seven        1        1   table cell #> 4.84     11     FALSE       4            eight        1        1   table cell #> 5.5       1      TRUE       5             date        1        1   table cell #> 5.13      2     FALSE       5             <NA>        0        1   table cell #> 5.21      3     FALSE       5       2015-01-15        1        1   table cell #> 5.29      4     FALSE       5       2015-02-15        1        1   table cell #> 5.37      5     FALSE       5       2015-03-15        1        1   table cell #> 5.45      6     FALSE       5       2015-04-15        1        1   table cell #> 5.53      7     FALSE       5             <NA>        0        1   table cell #> 5.61      8     FALSE       5       2015-05-15        1        1   table cell #> 5.69      9     FALSE       5       2015-06-15        1        1   table cell #> 5.77     10     FALSE       5               NA        1        1   table cell #> 5.85     11     FALSE       5       2015-08-15        1        1   table cell #> 6.6       1      TRUE       6             time        1        1   table cell #> 6.14      2     FALSE       6             <NA>        0        1   table cell #> 6.22      3     FALSE       6            13:35        1        1   table cell #> 6.30      4     FALSE       6            14:40        1        1   table cell #> 6.38      5     FALSE       6            15:45        1        1   table cell #> 6.46      6     FALSE       6            16:50        1        1   table cell #> 6.54      7     FALSE       6             <NA>        0        1   table cell #> 6.62      8     FALSE       6            17:55        1        1   table cell #> 6.70      9     FALSE       6               NA        1        1   table cell #> 6.78     10     FALSE       6            19:10        1        1   table cell #> 6.86     11     FALSE       6            20:20        1        1   table cell #> 7.7       1      TRUE       7         datetime        1        1   table cell #> 7.15      2     FALSE       7             <NA>        0        1   table cell #> 7.23      3     FALSE       7 2018-01-01 02:22        1        1   table cell #> 7.31      4     FALSE       7 2018-02-02 14:33        1        1   table cell #> 7.39      5     FALSE       7 2018-03-03 03:44        1        1   table cell #> 7.47      6     FALSE       7 2018-04-04 15:55        1        1   table cell #> 7.55      7     FALSE       7             <NA>        0        1   table cell #> 7.63      8     FALSE       7 2018-05-05 04:00        1        1   table cell #> 7.71      9     FALSE       7 2018-06-06 16:11        1        1   table cell #> 7.79     10     FALSE       7 2018-07-07 05:22        1        1   table cell #> 7.87     11     FALSE       7               NA        1        1   table cell #> 8.8       1      TRUE       8         currency        1        1   table cell #> 8.16      2     FALSE       8             <NA>        0        1   table cell #> 8.24      3     FALSE       8           49.950        1        1   table cell #> 8.32      4     FALSE       8           17.950        1        1   table cell #> 8.40      5     FALSE       8            1.390        1        1   table cell #> 8.48      6     FALSE       8        65100.000        1        1   table cell #> 8.56      7     FALSE       8             <NA>        0        1   table cell #> 8.64      8     FALSE       8         1325.810        1        1   table cell #> 8.72      9     FALSE       8           13.255        1        1   table cell #> 8.80     10     FALSE       8               NA        1        1   table cell #> 8.88     11     FALSE       8            0.440        1        1   table cell"},{"path":"https://elipousson.github.io/officerExtras/reference/check_office_fileext.html","id":null,"dir":"Reference","previous_headings":"","what":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","title":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","text":"Check file path docx, pptx, xlsx file extension","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_office_fileext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","text":"","code":"check_office_fileext(   x,   arg = caller_arg(x),   fileext = c(\"docx\", \"pptx\", \"xlsx\"),   allow_null = FALSE,   call = caller_env(),   ... )  check_docx_fileext(x, arg = caller_arg(x), call = caller_env(), ...)  check_pptx_fileext(x, arg = caller_arg(x), call = caller_env(), ...)  check_xlsx_fileext(x, arg = caller_arg(x), call = caller_env(), ...)"},{"path":"https://elipousson.github.io/officerExtras/reference/check_office_fileext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check file path for a docx, pptx, or xlsx file extension — check_office_fileext","text":"x Object check. arg Argument name object check. Used improve cli::cli_abort() messages. Defaults caller_arg(x). fileext File extensions allow without error. Defaults \"docx\", \"pptx\", \"xlsx\". allow_null TRUE x NULL, invisibly return NULL. FALSE (default), error unless x character vector file extension matching supplied fileext value. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. ... Additional parameters passed cli::cli_abort()","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","title":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","text":"Check x rdocx, rpptx, rxlsx object","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","text":"","code":"check_officer(   x,   arg = caller_arg(x),   what = c(\"rdocx\", \"rpptx\", \"rxlsx\"),   call = caller_env(),   ... )  check_docx(x, arg = caller_arg(x), call = caller_env(), ...)  check_pptx(x, arg = caller_arg(x), call = caller_env(), ...)  check_xlsx(x, arg = caller_arg(x), call = caller_env(), ...)  check_block_list(   x,   arg = caller_arg(x),   allow_empty = FALSE,   allow_null = FALSE,   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if x is a rdocx, rpptx, or rxlsx object — check_officer","text":"x Object check. arg Argument name object check. Used improve cli::cli_abort() messages. Defaults caller_arg(x). Class names check call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. ... Additional parameters passed cli::cli_abort() allow_empty TRUE, check_block_list() allows empty block list. Defaults FALSE. allow_null FALSE (default), error x NULL.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","title":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","text":"Check object error object data.frame required column names summary data.frame created rdocx rpptx object. Optionally check number rows, specific content_type value, tables included document summary created .","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","text":"","code":"check_officer_summary(   x,   n = NULL,   content_type = NULL,   summary_type = \"doc\",   tables = FALSE,   ...,   arg = caller_arg(x),   call = parent.frame() )"},{"path":"https://elipousson.github.io/officerExtras/reference/check_officer_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a summary data.frame created from a rdocx or rpptx object — check_officer_summary","text":"x object check data.frame object created officer::docx_summary() another summary function. n Required number rows. Optional. n length 1, checks make sure number rows within range max(n) min(n). Defaults NULL. content_type Required content_type, e.g. \"paragraph\", \"table cell\", \"image\". Optional. Defaults NULL. summary_type Summary type. Options \"doc\", \"docx\", \"pptx\", \"slide\", \"layout\". \"doc\" requires data.frame include \"content_type\" column allows columns either docx pptx summary. tables TRUE, require summary include column names indicated table present rdocx rpptx summary. ... Additional parameters passed cli::cli_abort() arg Argument name use error messages. Defaults caller_arg(x) call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/combine_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple rdocx objects or docx files — combine_docx","title":"Combine multiple rdocx objects or docx files — combine_docx","text":"combine_docx() variant officer::body_add_docx() allows number input files supports rdocx objects well Word file paths. Optionally use separator files objects. Please note create new rdocx object function (officer::body_add_docx()) added content appear summary data frame created officer_summary() accessible functions document opened edited Microsoft Word. part OOXML AltChunk Class works avoided.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/combine_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple rdocx objects or docx files — combine_docx","text":"","code":"combine_docx(   ...,   docx = NULL,   .list = list2(...),   pos = \"after\",   sep = NULL,   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/combine_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple rdocx objects or docx files — combine_docx","text":"... number additional rdocx objects docx file paths. docx rdocx object file path docx file extension. Defaults NULL. .list number additional rdocx objects docx file paths passed list. Defaults list2() pos add new element relative cursor, one \"\", \"\", \"\". sep Separator use docx files. bare function takes rdocx object parameter, officer::body_add_break another object passed add_to_body() value parameter. Optional. Defaults NULL. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/combine_docx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple rdocx objects or docx files — combine_docx","text":"rdocx object.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/combine_docx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple rdocx objects or docx files — combine_docx","text":"","code":"if (FALSE) { if (interactive()) {   docx_path <- system.file(\"doc_examples\", \"example.docx\", package = \"officer\")   docx <- read_officer(docx_path)    combine_docx(     docx,     docx_path   ) } }"},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"convert_docx() uses rmarkdown::pandoc_convert() convert rodcx object Word file another format pandoc. \"\" parameter contains file extension, assumed output file name. want convert file Word document, use input parameter path Markdown, HTML, file.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"","code":"convert_docx(   docx = NULL,   to = NULL,   input = NULL,   output = NULL,   path = NULL,   options = NULL,   extract_media = TRUE,   overwrite = TRUE,   quiet = TRUE,   ... )"},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"docx rdocx object path docx file. Optional input provided. Format convert (specified, must specify output) input Character vector containing paths input files (files must UTF-8 encoded) output Output file (specified determined based format converted ). path File path converted file passed wd parameter rmarkdown::pandoc_convert(). docx rdocx object, path defaults current working directory instead base directory input file path. options Character vector command line options pass pandoc. extract_media TRUE, append \"--extract-media=.\" options. Defaults FALSE. overwrite TRUE (default), remove file path already exists. FALSE file exists, function aborts. quiet TRUE, suppress alert messages pass FALSE verbose parameter rmarkdown::pandoc_convert(). Defaults TRUE. ... Arguments passed rmarkdown::pandoc_convert Format convert (specified format determined based file extension input). citeproc TRUE run pandoc-citeproc filter (processing citations) part conversion.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"Executes call pandoc using rmarkdown::pandoc_convert() create file officer object docx file.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"Supported input output formats described pandoc user guide. system path well version pandoc shipped RStudio (running RStudio) scanned pandoc highest version available used.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/convert_docx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an rodcx object or Word file to another format with pandoc — convert_docx","text":"","code":"docx_example <- read_officer(   system.file(\"doc_examples/example.docx\", package = \"officer\") )  convert_docx(   docx_example,   to = \"markdown\" )  withr::with_tempdir({   convert_docx(     docx_example,     output = \"docx_example.html\"   ) })"},{"path":"https://elipousson.github.io/officerExtras/reference/cursor_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","title":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","text":"combined function setting cursor position officer::cursor_reach(), officer::cursor_bookmark(), using doc_index value officer::docx_summary(). Defaults using officer::cursor_end(), officer::cursor_begin(), officer::cursor_backward(), officer::cursor_forward() keyword, id, index NULL.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/cursor_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","text":"","code":"cursor_docx(   docx,   keyword = NULL,   id = NULL,   index = NULL,   default = \"end\",   quiet = FALSE,   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/cursor_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cursor position in rdocx object based on keyword, id, or index — cursor_docx","text":"docx rdocx object. keyword, id keyword string used place cursor officer::cursor_reach() bookmark id officer::cursor_bookmark(). Defaults NULL. keyword id provided, gt object inserted front document. index integer matching doc_index value appearing summary docx object created officer::docx_summary(). index paragraph value, text pargraph used keyword. default Character string one following options: c(\"end\", \"begin\", \"backward\", \"forward\") set cursor position. used keyword, id, index NULL. quiet FALSE (default) warn keyword found. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/dims_docx_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","title":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","text":"function extends officer::docx_dim() also returning body text dimensions within margins, aspect ratio page body, page orientation string (\"landscape\" \"portrait\").","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/dims_docx_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","text":"","code":"dims_docx_ext(docx)"},{"path":"https://elipousson.github.io/officerExtras/reference/dims_docx_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get page and block layout dimensions from an rdocx object — dims_docx_ext","text":"docx rdocx object get dimensions .","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/fill_with_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill a new column based on an existing column depending on a pattern — fill_with_pattern","title":"Fill a new column based on an existing column depending on a pattern — fill_with_pattern","text":"function uses vctrs::vec_fill_missing() convert hierarchically nested headings text rectangular data.frame. experimental function may modified removed. present, used officer_tables().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/fill_with_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill a new column based on an existing column depending on a pattern — fill_with_pattern","text":"","code":"fill_with_pattern(   x,   pattern = \"^heading\",   pattern_col = \"style_name\",   fill_col = \"text\",   col = \"heading\",   direction = c(\"down\", \"up\", \"downup\", \"updown\"),   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/fill_with_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill a new column based on an existing column depending on a pattern — fill_with_pattern","text":"x input data.frame (assumed officer_summary() default values). pattern Passed grepl() pattern identifying rows fill_col values pulled new column named col. Defaults \"^heading\" matches default heading style names. pattern_col Name column use pattern matching, Defaults \"style_name\". fill_col Name column fill , Defaults \"text\". col Name new column fill values fill_col, Default: Defaults \"heading\" direction Direction fill passed vctrs::vec_fill_missing(), Default: c(\"\", \"\", \"downup\", \"updown\") call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/fill_with_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill a new column based on an existing column depending on a pattern — fill_with_pattern","text":"data.frame additional column taking name col values column named fill_col.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/is_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this object an officer class object? — is_officer","title":"Is this object an officer class object? — is_officer","text":"is_officer() variants basic wrappers inherits() check object classes created functions officer package. functions intended internal use exposed use extension developers.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/is_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this object an officer class object? — is_officer","text":"","code":"is_officer(x, what = c(\"rdocx\", \"rpptx\", \"rxlsx\"))  is_rdocx(x)  is_rpptx(x)  is_block_list(x)"},{"path":"https://elipousson.github.io/officerExtras/reference/is_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this object an officer class object? — is_officer","text":"x object test Class classes passed inherits()","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/make_block_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a list of blocks to add to a Word document or PowerPoint presentation — make_block_list","title":"Make a list of blocks to add to a Word document or PowerPoint presentation — make_block_list","text":"make_block_list() extends officer::block_list() supporting list inputs optionally combining parameters existing block list (using blocks parameter). Unlike officer::block_list(), make_block_list() errors input parameters provided. combine_blocks() takes number block_list objects combined single block_list. functions yet working expected.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/make_block_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a list of blocks to add to a Word document or PowerPoint presentation — make_block_list","text":"","code":"make_block_list(blocks = NULL, ..., allow_empty = FALSE, call = caller_env())  combine_blocks(...)"},{"path":"https://elipousson.github.io/officerExtras/reference/make_block_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a list of blocks to add to a Word document or PowerPoint presentation — make_block_list","text":"blocks list parameters pass officer::block_list() block_list object. parameters provided ... blocks block_list, additional parameters appended end blocks. ... make_block_list(), parameters passed officer::block_list() must include block_list objects. combine_blocks(), parameters must block_list objects. allow_empty TRUE, check_block_list() allows empty block list. Defaults FALSE. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officerExtras-package.html","id":null,"dir":"Reference","previous_headings":"","what":"officerExtras: Extra Helpers for 'officer' — officerExtras-package","title":"officerExtras: Extra Helpers for 'officer' — officerExtras-package","text":"Helper convenience functions using 'officer' package modify docx files.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officerExtras-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"officerExtras: Extra Helpers for 'officer' — officerExtras-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_add_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a list of blocks into a Word document or PowerPoint presentation — officer_add_blocks","title":"Add a list of blocks into a Word document or PowerPoint presentation — officer_add_blocks","text":"officer_add_blocks() supports adding list blocks rdocx (using add_blocks_to_body()) rpptx objects (using officer::ph_with()). add_blocks_to_body() variant officer::body_add_blocks() allows users set cursor position adding block list using cursor_docx().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_add_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a list of blocks into a Word document or PowerPoint presentation — officer_add_blocks","text":"","code":"officer_add_blocks(   x,   blocks,   pos = \"after\",   location = NULL,   level_list = integer(0),   ...,   call = caller_env() )  add_blocks_to_body(   docx,   blocks,   pos = \"after\",   keyword = NULL,   id = NULL,   index = NULL,   ... )"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_add_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a list of blocks into a Word document or PowerPoint presentation — officer_add_blocks","text":"x rdocx rpptx object. Required. blocks set blocks used footnote content returned function block_list(). pos add new element relative cursor, one \"\", \"\", \"\". location NULL, location defaults officer::ph_location_type() level_list list levels hierarchy structure integer values. used object formated unordered list. 1 2, item 1 level 1, item 2 level 2. ... arguments passed methods. adding ggplot object plot_instr, arguments used png function. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. docx rdocx object. keyword, id keyword string used place cursor officer::cursor_reach() bookmark id officer::cursor_bookmark(). Defaults NULL. keyword id provided, gt object inserted front document. index integer matching doc_index value appearing summary docx object created officer::docx_summary(). index paragraph value, text pargraph used keyword.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"Unzip docx pptx file temporary directory, check directory contains media folder, copy media files directory set dir. rdocx rpptx object provided, files copied temporary package_dir associated object (accessible via x[[\"package_dir\"]]).","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"","code":"officer_media(   filename = NULL,   path = NULL,   x = NULL,   target = \"media\",   list = FALSE,   overwrite = TRUE )"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"filename, path File name path docx pptx file. One two must provided. Ignored x provided. Defaults NULL. x rdocx rpptx object containing one media file. target Folder name path copy media files. dir created folder exists location. list TRUE, display message listing files contained docx pptx file copy files dir. Defaults FALSE. overwrite TRUE (default), overwrite files names target path. FALSE, abort files names already exist.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officer_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy media from a docx or pptx file or a rdocx or rpptx object to a target\nfolder — officer_media","text":"","code":"officer_media(   system.file(\"doc_examples/example.pptx\", package = \"officer\"),   list = TRUE ) #> ℹ 1 media file found in example.pptx #> • image1.png"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a rdocx or rpptx object — officer_summary","title":"Summarize a rdocx or rpptx object — officer_summary","text":"officer_summary() extends officer::docx_summary() officer summary functions handling multiple input types within single function. preserve parameter supported officer version >= 0.6.3 (currently development version) ignored unless minimum supported version officer installed.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a rdocx or rpptx object — officer_summary","text":"","code":"officer_summary(   x,   summary_type = \"doc\",   index = NULL,   preserve = FALSE,   as_tibble = TRUE,   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a rdocx or rpptx object — officer_summary","text":"x rdocx rpptx object passed officer::docx_summary(), officer::pptx_summary(), officer::slide_summary(), officer::layout_summary(). x data frame created one functions, returned (feature may removed future). summary_type Summary type. Options \"doc\", \"docx\", \"pptx\", \"slide\", \"layout\". \"doc\" requires data.frame include \"content_type\" column allows columns either docx pptx summary. index slide index preserve FALSE (default), text table cells collapsed single line. TRUE, line breaks table cells preserved \"\\n\" character. feature adapted docxtractr::docx_extract_tbl() published MIT licensed {docxtractr} package Bob Rudis. as_tibble TRUE (default), return tibble data frame. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a rdocx or rpptx object — officer_summary","text":"tibble data frame object.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a rdocx or rpptx object — officer_summary","text":"","code":"docx_example <- read_officer(   system.file(\"doc_examples\", \"example.docx\", package = \"officer\") )  officer_summary(docx_example) #> # A tibble: 69 × 11 #>    doc_index content_type style_name text  level num_id row_id is_header cell_id #>        <int> <chr>        <chr>      <chr> <dbl>  <int>  <int> <lgl>       <dbl> #>  1         1 paragraph    heading 1  \"Tit…    NA     NA     NA NA             NA #>  2         2 paragraph    NA         \"Lor…    NA     NA     NA NA             NA #>  3         3 paragraph    heading 1  \"Tit…    NA     NA     NA NA             NA #>  4         4 paragraph    List Para… \"Qui…     1      2     NA NA             NA #>  5         5 paragraph    List Para… \"Aug…     1      2     NA NA             NA #>  6         6 paragraph    List Para… \"Sap…     1      2     NA NA             NA #>  7         7 paragraph    heading 2  \"Sub…    NA     NA     NA NA             NA #>  8         8 paragraph    List Para… \"Qui…     1      1     NA NA             NA #>  9         9 paragraph    List Para… \"Aug…     1      1     NA NA             NA #> 10        10 paragraph    List Para… \"Sap…     1      1     NA NA             NA #> # ℹ 59 more rows #> # ℹ 2 more variables: col_span <dbl>, row_span <int>  pptx_example <- read_officer(   \"example.pptx\", system.file(\"doc_examples\", package = \"officer\") )  officer_summary(pptx_example) #> # A tibble: 54 × 9 #>    text  id    content_type slide_id row_id cell_id col_span row_span media_file #>    <chr> <chr> <chr>           <int>  <int>   <int>    <int>    <int> <chr>      #>  1 \"Tit… 12    paragraph           1     NA      NA       NA       NA NA         #>  2 \"A t… 13    paragraph           1     NA      NA       NA       NA NA         #>  3 \"and… 13    paragraph           1     NA      NA       NA       NA NA         #>  4 \"and… 13    paragraph           1     NA      NA       NA       NA NA         #>  5 \"and… 13    paragraph           1     NA      NA       NA       NA NA         #>  6 \"Hea… 18    table cell          1      1       1        1        1 NA         #>  7 \"A\"   18    table cell          1      2       1        1        1 NA         #>  8 \"B\"   18    table cell          1      3       1        1        1 NA         #>  9 \"B\"   18    table cell          1      4       1        1        1 NA         #> 10 \"C\"   18    table cell          1      5       1        1        1 NA         #> # ℹ 44 more rows  officer_summary(pptx_example, \"slide\", 1) #> # A tibble: 5 × 11 #>   type  id    ph_label     offx  offy    cx    cy rotation fld_id fld_type text  #>   <chr> <chr> <chr>       <dbl> <dbl> <dbl> <dbl>    <int> <chr>  <chr>    <chr> #> 1 title 12    Titre 11       NA    NA    NA    NA       NA NA     NA       \"Tit… #> 2 body  13    Espace rés…    NA    NA    NA    NA       NA NA     NA       \"A t… #> 3 body  18    Espace rés…    NA    NA    NA    NA       NA NA     NA       \"{5C… #> 4 body  15    Espace rés…    NA    NA    NA    NA       NA NA     NA       \"R l… #> 5 body  17    Espace rés…    NA    NA    NA    NA       NA NA     NA       \"\""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new columns to an officer summary data.frame based on specific levels — officer_summary_levels","title":"Create new columns to an officer summary data.frame based on specific levels — officer_summary_levels","text":"function works fill_with_pattern() help convert hierarchically organized text, e.g. text leveled headings styles data.frame new columns hold value preceding (succeeding) heading text.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new columns to an officer summary data.frame based on specific levels — officer_summary_levels","text":"","code":"officer_summary_levels(   x,   levels = NULL,   levels_from = \"style_name\",   exclude_levels = NULL,   fill_col = \"text\",   direction = c(\"down\", \"up\", \"downup\", \"updown\"),   ...,   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new columns to an officer summary data.frame based on specific levels — officer_summary_levels","text":"x input data.frame (assumed officer_summary() default values). levels Levels use. NULL (default), levels set unique, non-NA values levels_from column. levels_from Column name use identifying levels. Defaults \"style_name\". exclude_levels Levels exclude process adding new columns. fill_col Name column fill , Defaults \"text\". direction Direction fill passed vctrs::vec_fill_missing(), Default: c(\"\", \"\", \"downup\", \"updown\") ... Arguments passed officer_summary as_tibble TRUE (default), return tibble data frame. summary_type Summary type. Options \"doc\", \"docx\", \"pptx\", \"slide\", \"layout\". \"doc\" requires data.frame include \"content_type\" column allows columns either docx pptx summary. index slide index preserve FALSE (default), text table cells collapsed single line. TRUE, line breaks table cells preserved \"\\n\" character. feature adapted docxtractr::docx_extract_tbl() published MIT licensed {docxtractr} package Bob Rudis. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_summary_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new columns to an officer summary data.frame based on specific levels — officer_summary_levels","text":"summary data frame additional columns based supplied levels.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tables from a rdocx or rpptx object — officer_tables","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"Get one tables rdocx rpptx object. officer_tables() returns list data frames officer_table() returns single table data frame. functions based example code extracting Word document PowerPoint slides officeverse documentation. additional features including type_convert parameter addition doc_index values default names returned list tables based blog post Matt Dray.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"","code":"officer_tables(   x,   index = NULL,   has_header = TRUE,   col = NULL,   preserve = FALSE,   ...,   stack = FALSE,   type_convert = FALSE,   nm = NULL,   call = caller_env() )  officer_table(   x,   index = NULL,   has_header = TRUE,   col = NULL,   ...,   call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"x rdocx rpptx object data frame created officer_summary(). index index value matching doc_index value table summary data frame, Default: NULL has_header TRUE (default), tables expected implicit headers even Word table explicit header row. FALSE, explicit header rows used column names. col col supplied, officer_table() passes col additional parameters ... fill_with_pattern(). allows addition preceding headings captions column within data.frame returned officer_tables(). experimental feature may modified removed. Defaults NULL. preserve FALSE (default), text table cells collapsed single line. TRUE, line breaks table cells preserved \"\\n\" character. feature adapted docxtractr::docx_extract_tbl() published MIT licensed {docxtractr} package Bob Rudis. ... Additional parameters passed fill_with_pattern(). stack TRUE tables share number columns, return single combined data frame instead list. Defaults FALSE. type_convert TRUE, convert columns returned data frames appropriate type using utils::type.convert(). nm Names use returned list tables. NULL (default), names set doc_index values using pattern \"doc_index_<doc_index_number>\". call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"list data frames , stack TRUE, single data frame.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/officer_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tables from a rdocx or rpptx object — officer_tables","text":"","code":"docx_example <- read_docx_ext(   filename = \"example.docx\",   path = system.file(\"doc_examples\", package = \"officer\") )  officer_tables(docx_example) #> $doc_index_16 #>         Petals   Internode                 Sepal #> 1  5,621498349        <NA> 2,46210657918,2034091 #> 2  4,994616997          AA           2,429320759 #> 3  4,767504884        <NA>                   AAA #> 4   25,9242382        <NA>           2,066051345 #> 5  6,489375001 25,21130805           2,901582763 #> 6    5,7858682 25,52433147           2,655642742 #> 7  5,645575295 Merged cell           2,278691288 #> 8  4,828953215        <NA>           2,238467716 #> 9  6,783500773        <NA>           2,202762147 #> 10 5,395076839        <NA>           2,538375992 #> 11 4,683617783  29,2459239           2,601945544 #> 12        Note        <NA>                  <NA> #>                               Bract #> 1                              <NA> #> 2                       17,65204912 #> 3                              <NA> #> 4                       18,37915478 #> 5  17,3130473717,0721572418,2902189 #> 6                              <NA> #> 7                              <NA> #> 8                       19,87376227 #> 9                       19,85326662 #> 10                      19,56545356 #> 11                      18,95335451 #> 12                             <NA> #>   pptx_example <- read_pptx_ext(   filename = \"example.pptx\",   path = system.file(\"doc_examples\", package = \"officer\") )  officer_tables(pptx_example)[[1]] #>   Header 1  Header 2       Header 3 #> 2         A    12.23      blah blah #> 3         B     1.23 blah blah blah #> 4         B      9.0          Salut #> 5         C        6          Hello"},{"path":"https://elipousson.github.io/officerExtras/reference/read_docs_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Google Docs document, Slides, or Sheets URL to a rdocx, rpptx, or\nrxlsx object — read_docs_url","title":"Read a Google Docs document, Slides, or Sheets URL to a rdocx, rpptx, or\nrxlsx object — read_docs_url","text":"Uses Google Docs, Slides, Sheets URL export file locally, read officer object. filename NULL, exported file removed export.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/read_docs_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Google Docs document, Slides, or Sheets URL to a rdocx, rpptx, or\nrxlsx object — read_docs_url","text":"","code":"read_docs_url(url, format = NULL, filename = NULL, path = NULL, quiet = TRUE)"},{"path":"https://elipousson.github.io/officerExtras/reference/read_docs_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Google Docs document, Slides, or Sheets URL to a rdocx, rpptx, or\nrxlsx object — read_docs_url","text":"url URL Google Doc, Google Slides presentation, Google Sheets. format File format use export URL (typically set automatically). Options NULL (default), \"doc\", \"pptx\", \"xslx\". \"pdf\" \"csv\" supported future. filename Destination file name. Optional. filename NULL, downloaded file removed part function execution. path Folder path. Optional. quiet TRUE, suppress messages downloading file.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"read_officer() variant officer::read_docx(), officer::read_pptx(), officer::read_xlsx() allows users read different Microsoft Office file types single function. read_docx_ext(), read_pptx_ext(), read_xlsx_ext() wrappers read_officer() require matching input file type. versions allow filename path (officer functions use path). rdocx, rpptx, rxlsx class object provided x, object checked based fileext parameter returned .","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"","code":"read_officer(   filename = NULL,   path = NULL,   fileext = c(\"docx\", \"pptx\", \"xlsx\"),   x = NULL,   arg = caller_arg(x),   allow_null = TRUE,   quiet = TRUE,   call = parent.frame(),   ... )  read_docx_ext(   filename = NULL,   path = NULL,   docx = NULL,   allow_null = FALSE,   quiet = TRUE )  read_pptx_ext(   filename = NULL,   path = NULL,   pptx = NULL,   allow_null = FALSE,   quiet = TRUE )  read_xlsx_ext(   filename = NULL,   path = NULL,   xlsx = NULL,   allow_null = FALSE,   quiet = TRUE )"},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"filename, path File name path. Default: NULL. Must include \"docx\", \"pptx\", \"xlsx\" file path. \"dotx\" \"potx\" files also supported. fileext File extensions allow without error. Defaults \"docx\", \"pptx\", \"xlsx\". x rdocx, rpptx, rxlsx class object x provided, filename path ignored. Default: NULL arg Argument name object check. Used improve cli::cli_abort() messages. Defaults caller_arg(x). allow_null TRUE, function supports default behavior officer::read_docx(), officer::read_pptx(), officer::read_xlsx() returns empty document x, filename, path NULL. FALSE, one three parameters must supplied. quiet FALSE, warn docx provided filename /path also provided. Default: TRUE. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. ... Additional parameters passed cli::cli_abort() docx, pptx, xlsx rdocx, rpptx, rxlsx class object passed x parameter read_officer() variant functions. Defaults NULL.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/read_officer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a docx, pptx, potx, or xlsx file or use an existing object from officer\nif provided — read_officer","text":"rdocx, rpptx, rxlsx object.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/reduce_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce a list to a single officer object — reduce_officer","title":"Reduce a list to a single officer object — reduce_officer","text":"reduce_officer() wrapper purrr::reduce().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/reduce_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce a list to a single officer object — reduce_officer","text":"","code":"reduce_officer(   x = NULL,   .f = function(x, value, ...) {      vec_add_to_body(x, value = value, ...)  },   value = NULL,   ...,   .write_path = NULL )"},{"path":"https://elipousson.github.io/officerExtras/reference/reduce_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce a list to a single officer object — reduce_officer","text":"x File path officer object. .f function taking officer object first parameter value second parameter, Defaults anonymous function: function(x, value, ...) { vec_add_to_body(x, value = value, ...) } value vector values support function passed .f, Default: NULL ... Additional parameters passed purrr::reduce(). .write_path .write_path NULL, file path passed write_officer(), allowing modify docx file write back file single function call.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/reduce_officer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce a list to a single officer object — reduce_officer","text":"rdocx, rpptx, rxlsx object.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/reference/reduce_officer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce a list to a single officer object — reduce_officer","text":"","code":"if (FALSE) { if(interactive()){  x <- reduce_officer(value = LETTERS)   officer_summary(x)  } }"},{"path":"https://elipousson.github.io/officerExtras/reference/vec_add_to_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a vector of objects to a rdocx object using add_to_body() — vec_add_to_body","title":"Add a vector of objects to a rdocx object using add_to_body() — vec_add_to_body","text":"vec_add_to_body() vectorized variant add_to_body() allows users supply vector values str inputs add multiple blocks text, images, plots, tables document. Alternatively, function also supports adding single object multiple locations using multiple different styles.  parameters recycled using vctrs::vec_recycle_common() inputs must length 1 match length longest input vector. Optionally, function can apply separator element passing value add_to_body() passing docx function, officer::body_add_break().","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/vec_add_to_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a vector of objects to a rdocx object using add_to_body() — vec_add_to_body","text":"","code":"vec_add_to_body(   docx,   ...,   .sep = NULL,   .pos = \"after\",   .size = NULL,   .call = caller_env() )"},{"path":"https://elipousson.github.io/officerExtras/reference/vec_add_to_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a vector of objects to a rdocx object using add_to_body() — vec_add_to_body","text":"docx rdocx object. ... Arguments passed add_to_body gt_object gt object converted OOXML string gt::as_word() passed add_xml_to_body() str parameter. Required add_gt_to_body(). keyword,id keyword string used place cursor officer::cursor_reach() bookmark id officer::cursor_bookmark(). Defaults NULL. keyword id provided, gt object inserted front document. index integer matching doc_index value appearing summary docx object created officer::docx_summary(). index paragraph value, text pargraph used keyword. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. value object add document. Supported objects vectors, data.frame, graphics, block formatted paragraphs, unordered list formatted paragraphs, pretty tables package flextable, 'Microsoft' charts package mschart. style paragraph style name. names available function styles_info names Word styles defined base document (see argument path read_docx). str wml string pos add new element relative cursor, one \"\", \"\", \"\". .sep bare function, officer::body_add_break another object passed add_to_body() value parameter. .pos String passed pos parameter add_to_body() .sep .sep function. Defaults \"\". .size Desired output size. .call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/vec_add_to_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a vector of objects to a rdocx object using add_to_body() — vec_add_to_body","text":"","code":"docx_example <- read_officer()  docx_example <- vec_add_to_body(   docx_example,   value = c(\"Sample text 1\", \"Sample text 2\", \"Sample text 3\"),   style = c(\"heading 1\", \"heading 2\", \"Normal\") )  docx_example <- vec_add_to_body(   docx_example,   value = rep(\"Text\", 5),   style = \"Normal\",   .sep = officer::body_add_break )  officer_summary(docx_example) #> # A tibble: 13 × 6 #>    doc_index content_type style_name text            level num_id #>        <int> <chr>        <chr>      <chr>           <dbl>  <int> #>  1         1 paragraph    NA         \"\"                 NA     NA #>  2         2 paragraph    heading 1  \"Sample text 1\"    NA     NA #>  3         3 paragraph    heading 2  \"Sample text 2\"    NA     NA #>  4         4 paragraph    Normal     \"Sample text 3\"    NA     NA #>  5         5 paragraph    Normal     \"Text\"             NA     NA #>  6         6 paragraph    NA         \"\"                 NA     NA #>  7         7 paragraph    Normal     \"Text\"             NA     NA #>  8         8 paragraph    NA         \"\"                 NA     NA #>  9         9 paragraph    Normal     \"Text\"             NA     NA #> 10        10 paragraph    NA         \"\"                 NA     NA #> 11        11 paragraph    Normal     \"Text\"             NA     NA #> 12        12 paragraph    NA         \"\"                 NA     NA #> 13        13 paragraph    Normal     \"Text\"             NA     NA  if (rlang::is_installed(\"gt\")) {   gt_tbl <- gt::gt(gt::gtcars[1:2, 1:2])    # list inputs such as gt tables must be passed within a list to avoid   # issues   docx_example <- vec_add_to_body(     docx_example,     gt_object = list(gt_tbl, gt_tbl),     keyword = c(\"Sample text 1\", \"Sample text 2\")   )    officer_summary(docx_example) } #> # A tibble: 25 × 11 #>    doc_index content_type style_name text  level num_id row_id is_header cell_id #>        <int> <chr>        <chr>      <chr> <dbl>  <int>  <int> <lgl>       <dbl> #>  1         1 paragraph    NA         \"\"       NA     NA     NA NA             NA #>  2         2 paragraph    heading 1  \"Sam…    NA     NA     NA NA             NA #>  3         3 table cell   NA         \"mfr\"    NA     NA      1 TRUE            1 #>  4         3 table cell   NA         \"For…    NA     NA      2 FALSE           1 #>  5         3 table cell   NA         \"Fer…    NA     NA      3 FALSE           1 #>  6         3 table cell   NA         \"mod…    NA     NA      1 TRUE            2 #>  7         3 table cell   NA         \"GT\"     NA     NA      2 FALSE           2 #>  8         3 table cell   NA         \"458…    NA     NA      3 FALSE           2 #>  9         4 paragraph    heading 2  \"Sam…    NA     NA     NA NA             NA #> 10         5 table cell   NA         \"mfr\"    NA     NA      1 TRUE            1 #> # ℹ 15 more rows #> # ℹ 2 more variables: col_span <dbl>, row_span <int>"},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"Write rdocx, rpptx, rxlsx object file","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"","code":"write_officer(x, path, overwrite = TRUE, modified_by = Sys.getenv(\"USER\"), ...)"},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"x rdocx, rpptx, rxlsx object save. Document properties set rxlsx objects. path File path. overwrite TRUE (default), remove file path already exists. FALSE file exists, function aborts. modified_by withr package installed, modified_by overrides default value lastModifiedBy property assigned output file officer. Defaults Sys.getenv(\"USER\") (value used officer). ... Arguments passed officer::set_doc_properties title,subject,creator,description text fields created date object values named list (names field names), element single character value specifying value associated corresponding field name. values provided, argument ... ignored.","code":""},{"path":"https://elipousson.github.io/officerExtras/reference/write_officer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a rdocx, rpptx, or rxlsx object to a file — write_officer","text":"Returns input object (invisibly) writes rdocx, rpptx, rxlsx object file name location matching provided path.","code":""},{"path":[]},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"new-features-for-existing-functions-development-version","dir":"Changelog","previous_headings":"","what":"New features for existing functions","title":"officerExtras (development version)","text":"Update add_to_body() support gt_tbl table input value parameter. Update read_officer() return empty document (based included styles_template.docx file) allow_null = TRUE filename, path, x remain NULL. Update officer_summary() return tibble data frame (add tibble Imports). Update cursor_docx() use default cursor position function keyword, id, index NULL.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"new-functions-development-version","dir":"Changelog","previous_headings":"","what":"New functions","title":"officerExtras (development version)","text":"Add new vec_add_to_body() function optional .sep parameter. Add new make_block_list(), combine_blocks(), officer_add_blocks(), add_blocks_to_body() functions. Add new add_list_to_body() function. Add new combine_docx() function. Export is_officer() helper function.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-001","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.1","title":"officerExtras 0.0.1","text":"Add new officer_summary_levels() read_docs_url() functions. Add new features officer_tables() function using col, stack, type_convert, nm parameters partly inspired blog post Matt Dray.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009004","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9004","title":"officerExtras 0.0.0.9004","text":"Update officer_media() support rdocx rpptx objects fix overwrite check function errors files already exist. Add ggplot2 Suggests (used test add_gg_to_body()). Add new convert_docx() function support pandoc conversion rdocx objects docx files (requires rmarkdown Suggests). Update add_gt_to_body() incorporate implementation {gto} (better support table captions) credit Ellis Hughes. Update required adding xml2 Imports.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009003","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9003","title":"officerExtras 0.0.0.9003","text":"Add support writing custom lastModifiedBy property write_officer(). Add new functionality officer_summary() support layout slide summaries. Export check_officer_summary() helper function. Add new dims_docx_ext() function wrapping officer::docx_dim() Add add_gg_to_body() function wrapping officer::body_add_gg()","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009002","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9002","title":"officerExtras 0.0.0.9002","text":"Add support gt::as_word() parameters add_gt_to_body(). Add support “dotx” files read_officer() Fix error filename = NULL read_officer() Add officer_properties(), officer_tables(), officer_media() functions.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009001","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9001","title":"officerExtras 0.0.0.9001","text":"main change update functions now support full range officer class objects work pptx xlsx well docx files. read_docx_ext() now wrapper general read_officer() function. write_docx() replaced write_officer() update also includes two new functions vectorized versions add_to_body(): add_value_with_keys() add_str_with_keys(). add_to_body() updated fixes improvements making keyword, id, + index parameters optional using officer::body_add_par() default officer::body_add() (due odd error messages using latter lack support pos parameter). Finally, test coverage currently around 64% seems like good start new package.","code":""},{"path":"https://elipousson.github.io/officerExtras/news/index.html","id":"officerextras-0009000","dir":"Changelog","previous_headings":"","what":"officerExtras 0.0.0.9000","title":"officerExtras 0.0.0.9000","text":"Initial set package functions including: read_docx_ext() write_docx() add_to_body(), add_text_to_body(), add_xml_to_body(), add_gt_to_body() check_docx() check_docx_fileext()","code":""}]
